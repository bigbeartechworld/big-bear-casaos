# Configuration for big-bear-n8n setup
name: big-bear-n8n
# Service definitions for the big-bear-n8n application
services:
  # Service configuration for the n8n application
  app:
    container_name: n8n # Name of the n8n container
    image: n8nio/n8n:1.29.0 # Docker image and version to use for n8n
    restart: unless-stopped # Restart policy: Restart unless manually stopped
    ports:
      - 5678:5678 # Port mapping between host and container
    links:
      - db-n8n # Link to the database container
    volumes:
      - /DATA/AppData/$AppID/.n8n:/home/node/.n8n # Volume for persistent data
    environment:
      # Database configuration environment variables
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_DATABASE=n8n
      - DB_POSTGRESDB_HOST=db-n8n
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_USER=bigbearcasaos
      - DB_POSTGRESDB_PASSWORD=bigbearcasaos
    depends_on:
      db-n8n:
        condition: service_healthy # Ensure DB is healthy before starting app
    x-casaos: # CasaOS specific configuration
      envs:
        # Environment variables for CasaOS UI
        - container: DB_TYPE
          description:
            en_us: "Database type: postgresdb"
        # More environment variable descriptions...
      volumes:
        # Volume mapping descriptions for CasaOS UI
        - container: /home/node/.n8n
          description:
            en_us: "Container Path: /home/node/.n8n"
      ports:
        # Port configuration descriptions for CasaOS UI
        - container: "5678"
          description:
            en_us: "Container Port: 5678"

  # Database service configuration
  db-n8n:
    container_name: db-n8n # Name of the database container
    image: postgres:14.2 # Docker image and version for PostgreSQL
    restart: on-failure # Restart policy: Restart on failure
    volumes:
      - /DATA/AppData/$AppID/pgdata:/var/lib/postgresql/data # Persistent DB data
      - /DATA/AppData/$AppID/db/init-data.sh:/docker-entrypoint-initdb.d/init-data.sh # DB initialization script
    environment:
      # PostgreSQL user, password, and database environment variables
      - POSTGRES_PASSWORD=bigbearcasaos
      - POSTGRES_USER=bigbearcasaos
      - POSTGRES_DB=n8n
    healthcheck:
      # Health check commands to ensure DB availability
      test: ["CMD-SHELL", "pg_isready -h localhost -U bigbearcasaos -d n8n"]
      interval: 5s
      timeout: 5s
      retries: 10
    x-casaos: # CasaOS specific configuration
      envs:
        # Environment variables for CasaOS UI
        - container: POSTGRES_PASSWORD
          description:
            en_us: "Database password: bigbearcasaos"
        - container: POSTGRES_USER
          description:
            en_us: "Database user: bigbearcasaos"
        - container: POSTGRES_DB
          description:
            en_us: "Database type: postgresdb"
        # More environment variable descriptions...
      volumes:
        # Volume mapping descriptions for CasaOS UI
        - container: /var/lib/postgresql/data
          description:
            en_us: "Container Path: /var/lib/postgresql/data"
        - container: /docker-entrypoint-initdb.d/init-data.sh
          description:
            en_us: "Container Path: /docker-entrypoint-initdb.d/init-data.sh"

# CasaOS specific top-level configuration
x-casaos:
  architectures: # Supported CPU architectures
    - amd64
    - arm64
  main: app # Main service of the application
  description:
    en_us: Free and open fair-code licensed node based Workflow Automation Tool. # Description in English
  tagline:
    en_us: Workflow automation tool # Short description or tagline in English
  developer: "n8n" # Developer's name or identifier
  author: BigBearTechWorld # Author of this configuration
  icon: https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/png/n8n.png # Icon URL
  thumbnail: "" # Thumbnail image URL (empty if not available)
  title:
    en_us: n8n # Title in English
  category: BigBearCasaOS # Application category
  port_map: "5678" # Port mapping information
  tips:
    before_install:
      en_us: |
        Run this script:

        ```
        bash -c "$(wget -qLO - https://raw.githubusercontent.com/bigbeartechworld/big-bear-scripts/master/generate-n8n-init-data/run.sh)"
        ```
